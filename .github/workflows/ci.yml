# from: https://github.com/strasdat/vviz/blob/main/.github/workflows/ci.yml
name: Continuous integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout the repository
        uses: actions/checkout@v3
      -
        name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Compile and Run the tests
        run: ./run_tests.sh

  pre-commit-ci:
    name: pre-commit-ci
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kornia/kornia-rs/devel:latest
      credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: pre-commit/action@v3.0.0
    - uses: pre-commit-ci/lite-action@v1.0.0
      if: always()

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kornia/kornia-rs/devel:latest
      credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      -
        name: Checkout the repository
        uses: actions/checkout@v3
      -
        name: Run cargo fmt
        run: pre-commit run fmt --all-files

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kornia/kornia-rs/devel:latest
      credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      -
        name: Checkout the repository
        uses: actions/checkout@v3
      -
        name: Run cargo clippy
        run: pre-commit run clippy --all-files

  check:
    name: Cargo Check
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kornia/kornia-rs/devel:latest
      credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      -
        name: Checkout the repository
        uses: actions/checkout@v3
      -
        name: Run cargo check
        run: pre-commit run cargo-check --all-files
